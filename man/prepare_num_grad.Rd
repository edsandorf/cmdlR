% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_num_grad.R
\name{prepare_num_grad}
\alias{prepare_num_grad}
\title{Prepares the numerical gradient}
\usage{
prepare_num_grad(ll, estim_env, workers)
}
\arguments{
\item{ll}{A log likelihood function. If \code{estim_opt$optimizer = 'ucminf'},
then the log likelihood function should return the negative log likelihood
value.}

\item{estim_env}{A list of data and other variables to be coerced to environment with eval}

\item{workers}{A PSOCK or Fork cluster of workers created using 
\code{parallel::makeCluster()}}
}
\value{
A high precision numerical gradient function
}
\description{
The optimization routines 'ucminf', 'nloptr' and 'trustOptim' requires the
user to supply a gradient. Writing an analytical gradient can be quite
cumbersome for very complex likelihood expressions. This function is a simple
wrapper around \code{numDeriv::grad()} and prepares a high-precision numerical
gradient that can be supplied directly to the optimizers that require one. 
Note that a numerical gradient is slower in calculation and less precise than 
an analytical gradient.
}
\details{
The function is meant for internal use only.
}
